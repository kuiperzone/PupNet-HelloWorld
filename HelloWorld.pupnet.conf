################################################################################
# THIS IS A PUPNET.CONF FILE
# https://github.com/kuiperzone/PupNet
################################################################################

########################################
# APP PREAMBLE
########################################

# Mandatory application base name. This MUST BE the base name of the main executable
# file. It should NOT include any directory part or extension, i.e. do not append
# '.exe' or '.dll'. It should not contain spaces or invalid filename characters.
# Example: HelloWorld
AppBaseName = HelloWorld

# Mandatory application friendly name. Example: Hello World
AppFriendlyName = Hello World

# Mandatory application ID in reverse DNS form. Example: net.example.helloworld
AppId = zone.kuiper.helloworld

# Mandatory application version and package release of form: 'VERSION[RELEASE]'. Use
# optional square brackets to denote package release, i.e. '1.2.3[1]'. Release refers to
# a change to the deployment package, rather the application. If release part is absent
# (i.e. '1.2.3'), the release value defaults to '1'. Note that the version-release value
# given here may be overidden from the command line.
AppVersionRelease = 3.2.1[5]

# Mandatory single line application description. Example: Yet another Hello World application.
AppShortSummary = A Hello World application

# Mandatory application license name. This should be one of the recognised SPDX license
# identifiers, such as: 'MIT', 'GPL-3.0-or-later' or 'Apache-2.0'. For a properietary or
# custom license, use 'LicenseRef-Proprietary' or 'LicenseRef-LICENSE'.
AppLicenseId = GPL-3.0-or-later

# Optional path to a copyright/license text file. If provided, it will be packaged with the
# application and identified to package builder where supported. Example: Copyright.txt
AppLicenseFile = Deploy/LICENSE

########################################
# PUBLISHER
########################################

# Mandatory publisher, group or creator. Example: Acme Ltd, or HelloWorld Team
PublisherName = Kuiper Zone

# Optional copyright statement. Example: Copyright (C) HelloWorld Team 1970
PublisherCopyright = Copyright (C) Kuiper 2023

# Optional publisher or application web-link name. Note that Windows Setup packages
# require both PublisherLinkName and PublisherLinkUrl in order to include the link as an item
# in program menu entries. Default is: Home Page. Examples: Example.net, or: Hello World Online
PublisherLinkName = Home Page

# Optional publisher or application web-link URL. Example: https://example.net
PublisherLinkUrl = https://kuiper.zone

# publisher or maintainer email contact. Although optional, some packages (such as Debian)
# require it and will fail unless provided. Example: <hello> helloworld@example.net
PublisherEmail = nobody@kuiper.zone

########################################
# DESKTOP INTEGRATION
########################################

# Optional command name to start the application from the terminal. If, for example,
# AppBaseName is 'Zone.Kuiper.HelloWorld', the value here may be set to a simpler and/or
# lower-case variant (i.e. 'helloworld'). It must not contain spaces or invalid filename characters.
# Do not add any extension such as '.exe'. If empty, the application will not be in the path and cannot
# be started from the command line. For Windows Setup packages, see also SetupCommandPrompt.
# The StartCommand is not supported for all packages.
# kinds. Default is empty (none).
StartCommand = helloworld

# Boolean (true or false) which indicates whether the application runs in the terminal, rather
# than provides a GUI. It is used only to populate the 'Terminal' field of the .desktop file.
IsTerminalApp = true

# Optional path to a Linux desktop file. If empty (default), one will be generated automatically
# from the information in this file. Supplying a custom file, however, allows for mime-types and
# internationalisation. If supplied, the file MUST contain the line: 'Exec=${INSTALL_EXEC}'
# in order to use the correct install location. Other macros may be used to help automate the content.
# If no desktop entry is required, set the value to: 'NONE'. It has little effect for
# Windows Setup, except that setting it to 'NONE' will cause the
# application start menu entry to be omitted. Note. The contents of the files may use macro variables.
# Use 'pupnet --help macro' for reference.
# See: https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html
DesktopFile = Deploy/app.desktop

# Optional category for the application. The value should be one of the recognised Freedesktop
# top-level categories, such as: Audio, Development, Game, Office, Utility etc. Only a single value
# should be provided here which will be used, where supported, to populate metadata. The default
# is empty. See: https://specifications.freedesktop.org/menu-spec/latest/apa.html
# Example: Utility
PrimeCategory = Utility

# Optional icon file paths. The value may include multiple filenames separated with semicolon or
# given in multi-line form. Valid types are SVG, PNG and ICO (ICO ignored on Linux). Note that the
# inclusion of a scalable SVG is preferable on Linux, whereas PNGs must be one of the standard
# sizes and MUST include the size in the filename in the form: name.32x32.png' or 'name.32.png'.
# Example: Assets/app.svg;Assets/app.24x24.png;Assets/app.32x32.png;Assets/app.ico
IconFiles = """
    Deploy/HelloWorld.16x16.png
    Deploy/HelloWorld.24x24.png
    Deploy/HelloWorld.32x32.png
    Deploy/HelloWorld.48x48.png
    Deploy/HelloWorld.64x64.png
    Deploy/HelloWorld.svg
    Deploy/HelloWorld.ico
"""

# Path to AppStream metadata file. It is optional, but recommended as it is used by software centers.
# Note. The contents of the files may use macro variables. Use 'pupnet --help macro' for reference.
# See: https://docs.appimage.org/packaging-guide/optional/appstream.html
# Example: Deploy/app.metainfo.xml.
MetaFile = Deploy/app.metainfo.xml

########################################
# DOTNET PUBLISH
########################################

# Optional path relative to this file in which to find the dotnet project (.csproj)
# or solution (.sln) file, or the directory containing it. If empty (default), a single
# project or solution file is expected under the same directory as this file.
# IMPORTANT. If set to 'NONE', dotnet publish is disabled (not called).
# Instead, only DotnetPostPublish is called. Example: Source/MyProject
DotnetProjectPath = HelloWorld

# Optional arguments supplied to 'dotnet publish'. Do NOT include '-r' (runtime), app version,
# or '-c' (configuration) here as they will be added (i.e. via AppVersionRelease).
# Typically you want as a minimum: '-p:Version=${APP_VERSION} --self-contained true'. Additional
# useful arguments include: '-p:DebugType=None -p:DebugSymbols=false -p:PublishSingleFile=true
# -p:PublishReadyToRun=true -p:PublishTrimmed=true -p:TrimMode=link'.
# Note. This value may use macro variables. Use 'pupnet --help macro' for reference.
# See: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
DotnetPublishArgs = -p:Version=${APP_VERSION} --self-contained true -p:DebugType=None -p:DebugSymbols=false

# Post-publish (or standalone build) commands on Linux (ignored on Windows). Multiple commands
# may be specified, separated by semicolon or given in multi-line form. They are called after
# dotnet publish, but before the final output is built. These could, for example, copy additional
# files into the build directory given by ${BUILD_APP_BIN}. The working directory will be the
# location of this file. This value is optional, but becomes mandatory if DotnetProjectPath equals 'NONE'.
# Note. This value may use macro variables. Additionally, scripts may use these as environment variables.
# Use 'pupnet --help macro' for reference.
DotnetPostPublish = Deploy/PostPublish.sh

# Post-publish (or standalone build) commands on Windows (ignored on Linux). This should perform
# the equivalent operations, as required, as DotnetPostPublish, but using DOS commands and batch scripts.
# Multiple commands may be specified, separated by semicolon or given in multi-line form. Note. This value
# may use macro variables. Additionally, scripts may use these as environment variables.
# Use 'pupnet --help macro' for reference.
DotnetPostPublishOnWindows = Deploy/PostPublish.bat

########################################
# PACKAGE OUTPUT
########################################

# Optional package name (excludes version etc.). If empty, defaults to AppBaseName.
# However, it is used not only to specify the base output filename, but to identify the application
# in .deb and .rpm packages. You may wish, therefore, to ensure that the value represents a
# unique name, such as the AppId. Naming requirements for this are strict and must
# contain only alpha-numeric and '-', '+' and '.' characters. Example: HelloWorld
PackageName = HelloWorld

# Output directory, or subdirectory relative to this file. It will be created if it does not
# exist and will contain the final deploy output files. If empty, it defaults to the location
# of this file. Default: Deploy/bin
OutputDirectory = Deploy/bin

# Boolean (true or false) which sets whether to include the application version in the filename
# of the package (i.e. 'HelloWorld-1.2.3-x86_64.AppImage'). It is ignored if the output
# filename is specified at command line.
OutputVersion = false

########################################
# APPIMAGE OPTIONS
########################################

# Additional arguments for use with appimagetool. Useful for signing. Default is empty.
# See appimagetool --help. Example: --sign
AppImageArgs =

########################################
# FLATPAK OPTIONS
########################################

# The runtime platform. Invariably for .NET (inc. Avalonia), this should be
# 'org.freedesktop.Platform'.
# Refer: https://docs.flatpak.org/en/latest/available-runtimes.html
FlatpakPlatformRuntime = org.freedesktop.Platform

# The platform SDK. Invariably for .NET (inc. Avalonia applications) this should
# be 'org.freedesktop.Sdk'. The SDK must be installed on the build system.
FlatpakPlatformSdk = org.freedesktop.Sdk

# The platform runtime version. The latest available version may change periodically.
# Refer to Flatpak documentation. Example: 22.08
FlatpakPlatformVersion = 22.08

# Flatpak manifest 'finish-args' sandbox permissions. Optional, but if empty, the
# application will have extremely limited access to the host environment. This
# option may be used to grant required application permissions. Values here should
# be prefixed with '--' and separated by semicolon or given in multi-line form.
# Example: --socket=wayland;--socket=x11;--filesystem=host;--share=network
# Refer: https://docs.flatpak.org/en/latest/sandbox-permissions.html
FlatpakFinishArgs = """
    --socket=wayland
    --socket=x11
    --filesystem=host
    --share=network
"""

# Additional arguments for use with flatpak-builder. Useful for signing. Default is empty.
# See flatpak-builder --help. Example: --gpg-keys=FILE
FlatpakBuilderArgs =

########################################
# WINDOWS SETUP OPTIONS
########################################

# Optional command prompt title. The Windows installer will not add your application to the
# path. However, if your package contains a command-line utility, setting this value will
# ensure that a 'Command Prompt' menu entry is added which, when launched, will open a command
# window with your application directory in its path. See also StartCommand.
# Examples: Command Prompt, or: Command Prompt for Hello World
SetupPrompt = Hello World Command Prompt

# Mandatory value which specifies minimum version of Windows that your software runs on.
# Windows 8 = 6.2, Windows 10/11 = 10. Default: 10.
# See 'MinVersion' parameter in: https://jrsoftware.org/ishelp/
SetupMinWindowsVersion = 10

# Optional name and parameters of the Sign Tool to be used to digitally sign: the installer,
# uninstaller, and contained exe and dll files. If empty, files will not be signed.
# See 'SignTool' parameter in: https://jrsoftware.org/ishelp/
SetupSignTool =